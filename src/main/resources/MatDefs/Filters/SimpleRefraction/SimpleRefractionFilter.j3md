MaterialDef SimpleRefractionFilter {

    MaterialParameters {

        Int NumSamples
        Int NumSamplesDepth
      //  Texture2D water_reflection

        Texture2D Texture

        // For objects Mode
        Texture2D GrayTex
        Boolean Refract_Detail : False
        Boolean Refract_Faloff : True

    //    Texture2D DepthTexture
   //     Texture2D water_depthmap
        Texture2D water_normalmap
        Texture2D water_dudvmap
      //  Vector4 waterColor
        Float timeFlow : 0.1
     //   Float waterDepth
        Float distortionScale
        Float distortionMix
        Float texScale
     //   Vector2 FrustumNearFar
        Float waterTransparency
        
    }

    Technique {
        VertexShader GLSL100:   Filters/SimpleRefraction/simple_refraction_filter.vert
        FragmentShader GLSL100: Filters/SimpleRefraction/simple_refraction_filter.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            Time
        }

        Defines {
            REFRACT_OBJECTS : GrayTex
            REFRACT_DETAIL : Refract_Detail
            REFRACT_FALOFF : Refract_Faloff
        }
    }

    Technique {
        VertexShader GLSL150:   Filters/SimpleRefraction/simple_refraction_filter15.vert
        FragmentShader GLSL150: Filters/SimpleRefraction/simple_refraction_filter15.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            Time
        }

        Defines {
            RESOLVE_MS : NumSamples 
            REFRACT_OBJECTS : GrayTex
            REFRACT_DETAIL : Refract_Detail
        }

    }


}